/*
    Gradle root build file
    Project: HomeSetup
    Created: 5th March, 2022
    Copyright (c) 2023, HomeSetup team
*/

plugins {
  id 'idea'
  id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
}

idea {
  module {
    settings {
      rootModuleType = 'PYTHON_MODULE'
    }
    sourceDirs += file('bin')
    sourceDirs += file('dotfiles')
    testSourceDirs += file('tests')
    excludeDirs += file('.idea')
    excludeDirs += file('.gradle')
    excludeDirs += file('.vscode')
    excludeDirs += file('.github')
    excludeDirs += file('run-configs')
  }
}

tasks.withType(Exec) {
  doFirst {
    println commandLine
  }
}

ext {
  app_version =""
  bash = "bash${bashVersion}"
  versionFile = "$rootDir/.VERSION"
  startTime = System.currentTimeMillis()
  verbose = findProperty('verbose') ?: false
  python = "python${pythonVersion}"
}

apply from: "$projectDir/gradle.properties"
apply from: "$projectDir/gradle/version.gradle"
apply from: "$projectDir/gradle/bash.gradle"
apply from: "$projectDir/gradle/idea.gradle"
apply from: "$projectDir/gradle/badges.gradle"

/* Generate a changelog with the commits from last git tag */
task changelog(type: Task) {
  group = 'Publish'
  description = "Generate a changelog with the commits from last git tag"
  doLast {
    def out = new ByteArrayOutputStream()
    exec {
      commandLine 'git', 'describe', '--tags', '--abbrev=0', 'HEAD^'
      standardOutput = out
    }
    def lastTag = out.toString().trim()
    if (!lastTag) {
      raise new StopActionException("Unable to fetch latest tag")
    }
    out.reset()
    exec {
      commandLine 'git', 'log', '--oneline', "--pretty='%h %ad %s'", '--date=short', "${lastTag}..HEAD"
      standardOutput = out
      errorOutput = standardOutput
    }
    println("\nShowing changelog commits from: ${lastTag}")
    println("--------------------------------------------------------------------------------")
    out.each(s ->
      println(s)
    )
  }
}
