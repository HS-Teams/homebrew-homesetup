name: build-and-test
run-name: Build & Test

on:
  workflow_dispatch:
    inputs:
      ubuntu:
        description: 'Build & Test on Ubuntu latest ?'
        default: true
        required: true
        type: boolean
      macos:
        description: 'Build & Test on macOS latest ?'
        default: false
        required: true
        type: boolean
  push:
    branches:
      - '**'
    paths:
      - 'bin/**'
      - 'dotfiles/**'
      - 'tests/**'
      - '*.bash'
  fork:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
    paths:
      - 'bin/**'
      - 'dotfiles/**'
      - 'tests/**'
      - '*.bash'

permissions:
  contents: write

env:
  JOB_NAME: "HomeSetup-Build"

jobs:
  set-os-matrix:
    runs-on: "ubuntu-latest"
    outputs:
      matrix: ${{ steps.set-matrix-items.outputs.matrix }}
    steps:
      - name: Show Selected Input
        run: |
          echo "Build Ubuntu: ${{inputs.ubuntu}}"
          echo " Build macOS: ${{inputs.macos}}"
      - id: set-matrix-items
        run: |
          all_os=('ubuntu-latest' 'macos-latest')
          JSON="["
          while read -r os; do
            if [[ (${os} == 'ubuntu-latest' && "false" == "${{inputs.ubuntu}}") ||
                  (${os} == 'macos-latest' && "false" == "${{inputs.macos}}") ]]; then
              JSONline="{\"os\":\"${os}\"},"
              if [[ "${JSON}" != *"${JSONline}"* ]]; then
                JSON="${JSON}${JSONline}"
              fi
            fi
          done < <(printf '%s\n' "${all_os[@]}")
          if [[ $JSON == *, ]]; then  # Remove last ","
            JSON="${JSON%?}"
          fi
          JSON="${JSON}]"  # Add closing brackets
          echo "exclude=$( echo "${JSON}" )" >> $GITHUB_OUTPUT
      - name: Show Final Matrix
        run: |
          echo "exclude=${{ steps.set-matrix-items.outputs.exclude }}"

  build:
    needs: set-os-matrix
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
          - 'macos-latest'
        exclude: ${{ fromJson(needs.set-os-matrix.outputs.exclude) }}
    runs-on: ${{ matrix.os }}
    env:
      HHS_LOG_DIR: ''
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ vars.PYTHON_VERSION }}
      - name: Update PIP
        run: pip install --upgrade pip
      - name: Install HomeSetup with Prefix
        run: |
          ./install.bash -r -p "${{ github.workspace }}"
          echo "${{ github.workspace }}" > "${HOME}/.hhs-prefix"
          source "${HOME}"/.bashrc
          echo "HHS_LOG_DIR=$(echo ${HHS_LOG_DIR})" >> $GITHUB_ENV
          __hhs tests
      - name: Upload installation logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: "install-logs"
          path: "${{ env.HHS_LOG_DIR }}"
      - name: Show installation logs
        if: ${{ failure() }}
        run: |
          cat -n "${{ env.HHS_LOG_DIR }}/install.log"
