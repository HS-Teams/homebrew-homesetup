name: build-and-test
run-name: Build & Test

on:
  workflow_dispatch:
    inputs:
      ubuntu:
        description: 'Build & Test on Ubuntu latest ?'
        default: true
        required: true
        type: boolean
      fedora:
        description: 'Build & Test on Fedora latest ?'
        default: false
        required: true
        type: boolean
      alpine:
        description: 'Build & Test on Alpine latest ?'
        default: false
        required: true
        type: boolean
      macos:
        description: 'Build & Test on macOS latest ?'
        default: false
        required: true
        type: boolean
  push:
    branches:
      - '**'
    paths:
      - 'bin/**'
      - 'dotfiles/**'
      - 'tests/**'
      - '*.bash'
  fork:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
    paths:
      - 'bin/**'
      - 'dotfiles/**'
      - 'tests/**'
      - '*.bash'

permissions:
  contents: write

env:
  JOB_NAME: "HomeSetup-Build"

jobs:
  set-os-matrix:
    runs-on: "ubuntu-latest"
    outputs:
      matrix: ${{ steps.set-matrix-items.outputs.matrix }}
    steps:
      - name: Show Selected Items
        run: |
          echo "Build Ubuntu: ${{inputs.ubuntu}}"
          echo "Build Fedora: ${{inputs.fedora}}"
          echo "Build Alpine: ${{inputs.alpine}}"
          echo "Build macOS: ${{inputs.macos}}"
      - id: set-matrix-items
        run: |
          all_os=('ubuntu-latest' 'fedora-latest' 'alpine-latest' 'macos-latest')
          JSON="{\"include\":["
          while read -r os; do
            if [[ (${os} == 'ubuntu-latest' && "true" == "${{inputs.ubuntu}}") ||
                  (${os} == 'fedora-latest' && "true" == "${{inputs.fedora}}") ||
                  (${os} == 'alpine-latest' && "true" == "${{inputs.alpine}}") ||
                  (${os} == 'macos-latest' && "true" == "${{inputs.macos}}") ]]; then
              JSONline="{\"os\": \"${os}\"},"
              if [[ "$JSON" != *"$JSONline"* ]]; then
                JSON="$JSON$JSONline"
              fi
            fi
          done < <(printf '%s\n' "${all_os[@]}")
          if [[ $JSON == *, ]]; then  # Remove last ","
            JSON="${JSON%?}"
          fi
          JSON="$JSON]}"  # Add closing brackets
          echo "matrix=$( echo "$JSON" )" >> $GITHUB_OUTPUT

  build:
    needs: set-os-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.set-os-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ vars.PYTHON_VERSION }}
    - name: Update PIP
      run: pip install --upgrade pip
    - name: Install HomeSetup with Prefix
      run: |
        ./install.bash -r -p "${{ github.workspace }}"
        echo "${{ github.workspace }}" > "${HOME}/.hhs-prefix"
        source "${HOME}"/.bashrc
    - name: Execute HomeSetup bats tests
      run: |
        __hhs tests
    - name: Upload Installation Logs
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: "Upload-Install-Log"
        path: "${HHS_DIR}/.hhs/logs/install.log"
