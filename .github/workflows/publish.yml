name: publish
run-name: Publish

on:
  workflow_dispatch:
    inputs:
      gradle_debug_params:
        description: 'Gradle debug parameters'
        default: ''
        required: false
        type: string
      comment:
        description: 'Release description'
        default: 'New HomeSetup revision'
        required: false
        type: string
      build_docker:
        description: 'Build & Push docker images ?'
        type: boolean
        required: true
        default: true
      release_type:
        description: 'Major/Minor/Patch version ?'
        type: choice
        required: true
        default: 'patch'
        options:
          - 'none'
          - 'patch'
          - 'minor'
          - 'major'

permissions:
  contents: write

jobs:
  publish:
    strategy:
      matrix:
        os:
          - "ubuntu-latest"
    runs-on: ${{ matrix.os }}
    outputs:
      version: ${{ steps.publish-it.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ vars.JAVA_VERSION }}
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: ${{ vars.GRADLE_VERSION }}
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ vars.PYTHON_VERSION }}
      - name: Install Python tools
        run: |
          pip install --upgrade pip bumpver
      - name: Update patch number
        if: ${{ inputs.release_type == 'patch' }}
        run: gradle patchVersion ${gradle_debug_params}
      - name: Update minor number
        if: ${{ inputs.release_type == 'minor' }}
        run: gradle updateMinor ${gradle_debug_params}
      - name: Update major number
        if: ${{ inputs.release_type == 'major' }}
        run: gradle updateMajor ${gradle_debug_params}
      - name: Publish
        id: publish-it
        run: |
          if [ -z $(git status --porcelain) ]; then
            echo "No changes to commit!"
          else
            git config --global user.name "$(git log -n 1 --pretty=format:%an)"
            git config --global user.email "$(git log -n 1 --pretty=format:%ae)"
            git config github.token "${{ secrets.GITHUB_TOKEN }}"
            gradle publish -Pno-patch=true -Ptag=false ${gradle_debug_params}
          fi
          version="$(awk '/./{line=$0} END{print line}' .VERSION)"
          echo "version=$( echo "$version" )" >> $GITHUB_OUTPUT

  create-release:
      needs: publish
      name: Create Release
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3
        - name: Git Tag Version
          uses: yorevs/hspylib/.github/actions/tag-version@master
          with:
            tag-name: "v${{ needs.publish.outputs.version }}"
            github-token: ${{ secrets.GITHUB_TOKEN }}
        - name: Create Changelog
          id: change-log
          uses: yorevs/hspylib/.github/actions/changelog@master
          with:
            tag-name: "v${{ needs.publish.outputs.version }}"
        - name: Create Release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: "v${{ needs.publish.outputs.version }}"
            release_name: "${{ vars.APP_NAME }}-v${{ needs.publish.outputs.version }}-r${{ github.run_number }}"
            body: |
              # ${{ inputs.comment }}

              ${{ steps.change-log.outputs.changelog }}
            draft: false
            prerelease: false

  build-docker-images:
    if: inputs.build_docker
    needs: publish
    strategy:
      matrix:
        os:
          - "ubuntu-latest"
        docker-container:
          - "ubuntu"
          - "fedora"
          - "centos"
          - "alpine"
    runs-on: ${{ matrix.os }}
    environment: homesetup
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "docker/${{ matrix.docker-container }}"
          file: "docker/${{ matrix.docker-container }}/Dockerfile"
          push: true
          tags: "${{ env.DOCKERHUB_USERNAME }}/hhs-${{ matrix.docker-container }}:latest"
