#!/usr/bin/env bash
# shellcheck disable=2181,2034

#  Script: setup.bash
# Purpose: Contains all HHS initialization functions
# Created: Nov 06, 2023
#  Author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior
#  Mailto: homesetup@gmail.com
#    Site: https://github.com/yorevs#homesetup
# License: Please refer to <https://opensource.org/licenses/MIT>
#
# Copyright (c) 2023, HomeSetup team

# Current plugin name
PLUGIN_NAME="setup"

UNSETS=(
  help version cleanup execute DEFAULT_SETTINGS RE_PROPERTY
)

# Current hhs setup version
VERSION="1.0.2"

# Usage message
USAGE="usage: ${APP_NAME} ${PLUGIN_NAME} [restore]

 ____       _
/ ___|  ___| |_ _   _ _ __
\___ \ / _ \ __| | | | '_ \\
 ___) |  __/ |_| |_| | |_) |
|____/ \___|\__|\__,_| .__/
                     |_|

  HomeSetup initialization setup.

    options:
      restore   : Restore the HomeSetup defaults.
"

# Regex to match a setting.
RE_PROPERTY="([a-zA-Z0-9 ]+=.*)"

# Default HomeSetup initialization settings.
DEFAULT_SETTINGS=$(trim <<<"
# HomeSetup initialization settings file.
# Notice: Please do not edit this file, instead use: $ hhs setup.
# @version: v${VERSION}

# Set to allow exporting terminal language and locale on startup.
export HHS_SET_LOCALES=1
# Set to allow exporting all Setman settings on startup.
export HHS_EXPORT_SETTINGS=1
# Set to allow restoring the last used dir in terminal.
export HHS_RESTORE_LAST_DIR=1
# Set to disable Home Brew updates.
export HOMEBREW_NO_AUTO_UPDATE=1
# Set to enable bash completions.
export HHS_LOAD_COMPLETIONS=
# Set to enable starship prompt.
export HHS_USE_STARSHIP=
")

[[ -s "${HHS_DIR}/bin/app-commons.bash" ]] && source "${HHS_DIR}/bin/app-commons.bash"

# @purpose: HHS plugin required function
function help() {
  usage 0
}

# @purpose: HHS plugin required function
function version() {
  echo "HomeSetup ${PLUGIN_NAME} plugin v${VERSION}"
  quit 0
}

# @purpose: HHS plugin required function
function cleanup() {
  unset "${UNSETS[@]}"
  echo -n ''
}

# @purpose: HHS plugin required function
function execute() {

  local file_ver aux name title value minput_file sel_settings all_items=()

  list_contains "${*}" "restore" && echo "${DEFAULT_SETTINGS}" >"${HHS_SETUP_FILE}" && quit 0
  [[ ${#} -gt 0 ]] && echo -e "${RED}Command not found: ${*} ${NC}" && quit 1

  # Create the settings file if it does not exist or it's empty.
  [[ -s "${HHS_SETUP_FILE}" ]] || echo "${DEFAULT_SETTINGS}" >"${HHS_SETUP_FILE}"

  # Read all settings, but first, check the file version.
  file_ver="$(grep -E '@version:' "${HHS_SETUP_FILE}")"
  if [[ -z "${file_ver}" || "${file_ver#*: v}" != "${VERSION}" ]]; then
    echo "${DEFAULT_SETTINGS}" >"${HHS_SETUP_FILE}"
    echo "${YELLOW}HomeSetup init file has changed. Recreated it using defaults.${NC}"
    sleep 2
  fi

  while read -r setting; do
    if [[ ${setting} =~ ${RE_PROPERTY} ]]; then
      name="${setting%%=*}" && value="${setting#*=}"
      name="${name//export /}"
      all_items+=("${name}|checkbox||||${value}")
    fi
  done <"${HHS_SETUP_FILE}"

  title="${BLUE}HomeSetup Initialization Settings${ORANGE}\n"
  title+="Please check the desired startup settings:"
  minput_file=$(mktemp)

  if __hhs_minput "${minput_file}" "${title}" "${all_items[@]}"; then
    read -r -d ' ' -a sel_settings < <(grep . "${minput_file}")
    aux="$(mktemp)"
    for setting in "${sel_settings[@]}"; do
      name="${setting%%=*}" && value="${setting#*=}"
      value="${value//False/}"
      value="${value//True/1}"
      if ! sed "s/^\(export ${name}\)=\(.*\)$/\1=${value}/g" "${HHS_SETUP_FILE}" >"${aux}"; then
        quit 1 "Unable to change setting: ${setting}!"
      fi
      \mv "${aux}" "${HHS_SETUP_FILE}"
    done
    [[ -f "${aux}" ]] && \rm -f "${aux}"
    quit 0 "${GREEN}HomeSetup settings (${#sel_settings[@]}) saved!${NC}"
  else
    quit 0 "${YELLOW}HomeSetup settings (${#all_items[@]}) unchanged!${NC}"
  fi
}
