#!/usr/bin/env bash

#  Script: built-ins.bash
# Purpose: Contains all HHS initialization functions
# Created: Jan 06, 2020
#  Author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior
#  Mailto: homesetup@gmail.com
#    Site: https://github.com/yorevs#homesetup
# License: Please refer to <https://opensource.org/licenses/MIT>
#
# Copyright (c) 2023, HomeSetup team

# Current hhs-setup version
VERSION="1.0.0"

USAGE="Usage: ${APP_NAME} setup [-restore]"

# Default HomeSetup initialization settings.
DEFAULT_SETTINGS="
# HomeSetup initialization settings file.
# Notice: Please do not edit this file, instead use: $ hhs setup.
# @version: v${VERSION}

# Set to allow exporting terminal language and locale on startup.
export HHS_SET_LOCALES=1
# Set to allow exporting all Setman settings on startup.
export HHS_EXPORT_SETTINGS=1
# Set to allow restoring the last used dir in terminal.
export HHS_RESTORE_LAST_DIR=1
# Set to disable Home Brew updates.
export HOMEBREW_NO_AUTO_UPDATE=1
# Set to enable bash completions.
export HHS_LOAD_COMPLETIONS=
"

# Regex to match a setting.
RE_PROPERTY="([a-zA-Z0-9 ]+=.*)"


# shellcheck disable=SC1090
# @purpose: Setup HomeSetup.
function setup() {

  local file_ver aux name value minput_file sel_settings=() all_items=()

  [[ "$1" == 'help' ]] && echo "${USAGE}" && quit 0
  [[ "$1" == 'version' ]] && echo "v${VERSION}" && quit 0
  [[ "$1" == '-restore' ]] && echo "${DEFAULT_SETTINGS}" >"${HHS_SETUP_FILE}" && quit 0

  # Create the settings file if it does not exist or it's empty.
  [[ -s "${HHS_SETUP_FILE}" ]] || echo "${DEFAULT_SETTINGS}" >"${HHS_SETUP_FILE}"

  # Read all settings, but first, check the file version.
  file_ver="$(grep -E '@version:' "${HHS_SETUP_FILE}")"
  if [[ -z "${file_ver}" || "${file_ver#*: v}" != "${VERSION}" ]]; then
    echo "${DEFAULT_SETTINGS}" >"${HHS_SETUP_FILE}"
    echo "${YELLOW}HomeSetup init file has changed. Recreated it using defaults.${NC}"
    sleep 2
  fi

  while read -r setting; do
    if [[ ${setting} =~ ${RE_PROPERTY} ]]; then
      name="${setting%%=*}" && value="${setting#*=}"
      name="${name//export /}"
      all_items+=("${name}|checkbox||||${value}")
    fi
  done <"${HHS_SETUP_FILE}"

  title="${BLUE}HomeSetup Initialization Settings${ORANGE}\nPlease check the desired startup settings:"

  minput_file=$(mktemp)
  if __hhs_minput "${minput_file}" "${title}" "${all_items[@]}"; then
    read -r -d '' -a sel_settings < <(grep . "${minput_file}" )
    for setting in "${sel_settings[@]}"; do
      name="${setting%%=*}" && value="${setting#*=}"
      value="${value//False/}"
      value="${value//True/1}"
      aux="$(mktemp)"
      sed "s/^\(export ${name}\)=\(.*\)$/\1=${value}/g" "${HHS_SETUP_FILE}" > "${aux}" \
        && mv "${aux}" "${HHS_SETUP_FILE}" \
        && rm -f "${aux}"
    done
    clear && echo -e "\n${GREEN}HomeSetup settings (${#sel_settings[@]}) saved!${NC}\n"
  else
    clear && echo -e "\n${YELLOW}HomeSetup settings (${#all_items[@]}) unchanged!${NC}\n"
  fi
}
