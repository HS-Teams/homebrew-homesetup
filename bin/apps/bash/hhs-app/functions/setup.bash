#!/usr/bin/env bash
# shellcheck disable=2181

#  Script: setup.bash
# Purpose: Contains all HHS initialization functions
# Created: Nov 06, 2023
#  Author: <B>H</B>ugo <B>S</B>aporetti <B>J</B>unior
#  Mailto: homesetup@gmail.com
#    Site: https://github.com/yorevs#homesetup
# License: Please refer to <https://opensource.org/licenses/MIT>
#
# Copyright (c) 2023, HomeSetup team

# @purpose: Setup HomeSetup initialization options.
function setup() {

  local version usage default_settings re_property
  local file_ver aux name title value minput_file sel_settings=() all_items=()

  # Current hhs setup version
  version="1.0.2"

  usage="Usage: ${APP_NAME} setup [restore]

      Options:
        restore   : Restore the HomeSetup defaults.
  "

  # Default HomeSetup initialization settings.
  default_settings=$(trim <<<"
  # HomeSetup initialization settings file.
  # Notice: Please do not edit this file, instead use: $ hhs setup.
  # @version: v${version}

  # Set to allow exporting terminal language and locale on startup.
  export HHS_SET_LOCALES=1
  # Set to allow exporting all Setman settings on startup.
  export HHS_EXPORT_SETTINGS=1
  # Set to allow restoring the last used dir in terminal.
  export HHS_RESTORE_LAST_DIR=1
  # Set to disable Home Brew updates.
  export HOMEBREW_NO_AUTO_UPDATE=1
  # Set to enable bash completions.
  export HHS_LOAD_COMPLETIONS=
  # Set to enable starship prompt.
  export HHS_USE_STARSHIP=
  ")

  type trim

  echo "S: ${default_settings}" && quit 0

  # Regex to match a setting.
  re_property="([a-zA-Z0-9 ]+=.*)"

  [[ $1 == "help" ]] && echo "${usage}" && quit 0
  [[ $1 == "version" ]] && echo "${version}" && quit 0
  [[ $1 == "restore" ]] && echo "${default_settings}" >"${HHS_SETUP_FILE}" && quit 0

  # Create the settings file if it does not exist or it's empty.
  [[ -s "${HHS_SETUP_FILE}" ]] || echo "${default_settings}" >"${HHS_SETUP_FILE}"

  # Read all settings, but first, check the file version.
  file_ver="$(grep -E '@version:' "${HHS_SETUP_FILE}")"
  if [[ -z "${file_ver}" || "${file_ver#*: v}" != "${version}" ]]; then
    echo "${default_settings}" >"${HHS_SETUP_FILE}"
    echo "${YELLOW}HomeSetup init file has changed. Recreated it using defaults.${NC}"
    sleep 2
  fi

  while read -r setting; do
    if [[ ${setting} =~ ${re_property} ]]; then
      name="${setting%%=*}" && value="${setting#*=}"
      name="${name//export /}"
      all_items+=("${name}|checkbox||||${value}")
    fi
  done <"${HHS_SETUP_FILE}"

  title="${BLUE}HomeSetup Initialization Settings${ORANGE}\n"
  title+="Please check the desired startup settings:"

  minput_file=$(mktemp)
  if __hhs_minput "${minput_file}" "${title}" "${all_items[@]}"; then
    read -r -d '' -a sel_settings < <(grep . "${minput_file}")
    aux="$(mktemp)"
    for setting in "${sel_settings[@]}"; do
      name="${setting%%=*}" && value="${setting#*=}"
      value="${value//False/}"
      value="${value//True/1}"
      if ! sed "s/^ *\(export ${name}\)=\(.*\)$/\1=${value}/g" "${HHS_SETUP_FILE}" >"${aux}"; then
        quit 1 "Unable to change setting: ${setting}!"
      fi
    done
    \mv "${aux}" "${HHS_SETUP_FILE}"
    quit 0 "${GREEN}HomeSetup settings (${#sel_settings[@]}) saved!${NC}"
  else
    quit 0 "${YELLOW}HomeSetup settings (${#all_items[@]}) unchanged!${NC}"
  fi
}
