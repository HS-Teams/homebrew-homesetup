/*
    Gradle Versioning extension
    Project: HomeSetup
    Created: 5th March, 2022
*/

/* Change build number */
task changeVersion(type: Task) {
  group = 'Versioning'
  description = 'Increment the build number for publishing'
  outputs.upToDateWhen { false }
  doLast {
    def ver = project.ext.app_version
    def part = hasProperty('part') ? project.getProperty('part') : 'patch'
    println "Increment the ${part} number for publishing"
    // (major.minor.patch)
    exec {
      commandLine rootProject.python, '-m', 'bumpver', 'update', '--patch'
    }
  }
}

/* Check current program version */
task version {
  group = 'Versioning'
  description = 'Check current program version'
  outputs.upToDateWhen { false }
  doLast { task ->
    println "Project: [$task.project.name] Version: $project.ext.app_version"
  }
}

/* List all properties from properties.gradle */
task listProperties {
  group = 'Versioning'
  description = 'List all properties from gradle.properties'
  outputs.upToDateWhen { false }
  doLast {
    def regex = /.*=.*$/
    File propsFile = project.file('gradle.properties')
    File depsFile = project.file('gradle/dependencies.gradle')
    if (propsFile.exists()) {
      println "\nChecking dependency usage at: $depsFile\n"
      propsFile.eachLine { line ->
        if (line?.trim() && line ==~ regex) {
          // Extract the name and version from line: '<property> = <value>'
          def (name, value) = line.tokenize('=')
          println "${name.padRight(40, ' ')} => ${value.padRight(10, ' ')}"
        }
      }
    }
  }
}
